/* Generated By:JavaCC: Do not edit this line. LexerConstants.java */
package com.hugovs.jps;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LexerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LPAREN = 6;
  /** RegularExpression Id. */
  int RPAREN = 7;
  /** RegularExpression Id. */
  int LBRACE = 8;
  /** RegularExpression Id. */
  int RBRACE = 9;
  /** RegularExpression Id. */
  int LBRACK = 10;
  /** RegularExpression Id. */
  int RBRACK = 11;
  /** RegularExpression Id. */
  int COMMA = 12;
  /** RegularExpression Id. */
  int COLON = 13;
  /** RegularExpression Id. */
  int SEMICOLON = 14;
  /** RegularExpression Id. */
  int EQ = 15;
  /** RegularExpression Id. */
  int OP = 16;
  /** RegularExpression Id. */
  int BOP = 17;
  /** RegularExpression Id. */
  int DEF = 18;
  /** RegularExpression Id. */
  int VAR = 19;
  /** RegularExpression Id. */
  int TYPE = 20;
  /** RegularExpression Id. */
  int BOOL = 21;
  /** RegularExpression Id. */
  int CMD_IF = 22;
  /** RegularExpression Id. */
  int CMD_ELSE = 23;
  /** RegularExpression Id. */
  int CMD_FOR = 24;
  /** RegularExpression Id. */
  int CMD_WHILE = 25;
  /** RegularExpression Id. */
  int CMD_READ = 26;
  /** RegularExpression Id. */
  int CMD_WRITE = 27;
  /** RegularExpression Id. */
  int CMD_STOP = 28;
  /** RegularExpression Id. */
  int CMD_SKIP = 29;
  /** RegularExpression Id. */
  int CMD_RETURN = 30;
  /** RegularExpression Id. */
  int ID = 31;
  /** RegularExpression Id. */
  int STR = 32;
  /** RegularExpression Id. */
  int CHAR = 33;
  /** RegularExpression Id. */
  int NUM = 34;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "\":\"",
    "\";\"",
    "\"=\"",
    "<OP>",
    "<BOP>",
    "\"def\"",
    "\"var\"",
    "<TYPE>",
    "<BOOL>",
    "\"if\"",
    "\"else\"",
    "\"for\"",
    "\"while\"",
    "\"read\"",
    "\"write\"",
    "\"stop\"",
    "\"skip\"",
    "\"return\"",
    "<ID>",
    "<STR>",
    "<CHAR>",
    "<NUM>",
  };

}
